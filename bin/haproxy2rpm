#!/usr/bin/env ruby

$:.unshift File.join(File.dirname(__FILE__), *%w[.. lib])

require 'rubygems'
require 'optparse'

NEW_RELIC_CONFIG_PATH = File.join(ENV['HOME'], '.newrelic', 'newrelic.yml')

help = <<HELP
haproxy2rpm

Basic Command Line Usage:
  haproxy2rpm <haproxy log file to parse>

  Coniguration for newrelic is read from #{NEW_RELIC_CONFIG_PATH}
HELP

options = {
  :daemonize => false,
  :version => false,
  :syslog => false,
  :port => 3333,
  :ip => '0.0.0.0'
}

opts = OptionParser.new do |opts|
  opts.banner = help
  opts.on("-D", "--daemonize", "Daemonize") do
    options[:daemonize] = true
  end

  opts.on("-s", "--syslog", "Run syslog server") do
    options[:syslog] = true
  end

  opts.on("-lIP", "--listen IP", "Set IP to listen on") do |ip|
    options[:listen] = ip
  end

  opts.on("-pPORT", "--port PORT", "Set port to listen on") do |port|
    options[:port] = port
  end

  opts.on("-nAPP_NAME", "--app_name APP_NAME", "Set application name") do |app_name|
    options[:app_name] = app_name
  end

  opts.on("-eENVIRONMENT", "--environment ENVIRONMENT", "Set Newrelic agent env") do |env|
    options[:env] = env
  end

  opts.on("-v", "--version", "Print the version number and exit") do
    options[:version] = true
  end
end

opts.parse!

require 'haproxy2rpm'

log_file = ARGV[0] || ''

if(options[:version])
 puts "Haproxy2Rpm version: #{Haproxy2Rpm::VERSION}"
 exit(0)
end

unless options[:syslog] || File.exists?(log_file)
  puts 'please proivde a valid path to a haproxy log file'
  puts ''
  puts help
  exit(1)
end

unless File.exists?(NEW_RELIC_CONFIG_PATH)
  puts "please copy your newrelic agent configuration to #{NEW_RELIC_CONFIG_PATH}"
  exit(1)
end

trap("SIGINT") { 
  Haproxy2Rpm.stop
  exit(0)
}
Haproxy2Rpm.run(log_file, options)
