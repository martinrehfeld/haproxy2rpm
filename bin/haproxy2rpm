#!/usr/bin/env ruby

$:.unshift File.join(File.dirname(__FILE__), *%w[.. lib])

require 'rubygems'
require 'optparse'
require 'logger'

options = {
  :daemonize => false,
  :version => false,
  :syslog => false,
  :port => 3333,
  :address => '0.0.0.0',
  :log_to => STDOUT,
  :log_level => Logger::INFO
}

opts = OptionParser.new do |opts|
  opts.on("-d", "--daemonize", "Daemonize") do
    options[:daemonize] = true
  end

  opts.on("-s", "--syslog", "Run syslog server") do
    options[:syslog] = true
  end

  opts.on("-aHOST", "--address HOST", "Set host address to listen on") do |host|
    options[:address] = host
  end

  opts.on("-pPORT", "--port PORT", "Set port to listen on") do |port|
    options[:port] = port
  end

  opts.on("-nAPP_NAME", "--app_name APP_NAME", "Set application name") do |app_name|
    options[:app_name] = app_name
  end

  opts.on("-eENVIRONMENT", "--environment ENVIRONMENT", "Set Newrelic agent env") do |env|
    options[:env] = env
  end

  opts.on("-PFILE", "--pid FILE", "specify Pid file") do |file|
    options[:pid] = file
  end

  opts.on("-lFILE", "--log FILE", "File to redirect output") do |file|
    options[:log_to] = File.open(file, 'a')
    options[:log_to].sync = true
  end

  opts.on("-D", "--debug", "verbose logging") do
    options[:log_level] = Logger::DEBUG
  end

  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end

  opts.on("-v", "--version", "Print the version number and exit") do
    options[:version] = true
  end
end

opts.parse!

require 'haproxy2rpm'


Haproxy2Rpm.logger = Logger.new(options[:log_to])
Haproxy2Rpm.logger.level = options[:log_level]

log_file = ARGV[0] || ''

if(options[:version])
 puts "Haproxy2Rpm version: #{Haproxy2Rpm::VERSION}"
 exit(0)
end

unless options[:syslog] || File.exists?(log_file)
  puts 'please proivde a valid path to a haproxy log file'
  puts ''
  puts opts
  exit(1)
end

trap("SIGINT") { 
  Haproxy2Rpm.stop
  exit(0)
}
Haproxy2Rpm.run(log_file, options)
